<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="T_CallMethod" Id="{43800a14-cbe5-47c9-ba5a-eb02060ebed4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_CallMethod EXTENDS T_NamedBase IMPLEMENTS I_TaskState;
VAR
   _symbolHandle : ST_SymbolHandle;
   readWrite : T_AdsReadWrite;
END_VAR
VAR CONSTANT
   LOG_DEBUG : DWORD := 0;
   LOG_INFO : DWORD := ADSLOG_MSGTYPE_HINT;
   LOG_WARNING : DWORD := ADSLOG_MSGTYPE_WARN;
   LOG_ERROR : DWORD := ADSLOG_MSGTYPE_ERROR;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[readWrite();
]]></ST>
    </Implementation>
    <Property Name="Busy" Id="{00f364d3-e3a9-4967-95e6-1c1273ef761d}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{3cc2f5ee-80f1-46ef-a98e-ca6f7b4788a8}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := readWrite.Busy;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Done" Id="{66e95090-ae94-44d6-9141-353d329f353c}">
      <Declaration><![CDATA[PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{deeec7ee-ebb3-461e-aa30-9faef40c15a0}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := readWrite.Done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{49de12f0-b759-46c8-aa4c-1bf190915d3d}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{d5507bf0-9222-4a97-9da5-1cbd64e191c4}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := readWrite.Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMethodCall" Id="{5e373b87-5ead-4214-80c5-acfc0021609b}">
      <Declaration><![CDATA[METHOD TryMethodCall : BOOL
VAR_INPUT
   symbolHandle : ST_SymbolHandle;
   adsTimeout : TIME := DEFAULT_ADS_TIMEOUT; // DEFAULT_ADS_TIMEOUT is T#5s;
END_VAR
VAR_OUTPUT
   status : I_TaskState;
END_VAR
VAR
   readWriteOpts : ST_AdsReadWriteOptions;
END_VAR
VAR CONSTANT
   NO_HANDLE : DWORD := 0;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Busy THEN
   LogWarning('Cannot TryGetHandle as Busy');
   RETURN;

END_IF

_symbolHandle := symbolHandle;

readWriteOpts.AdsAddress := _symbolHandle.SymbolAddress.Ads;
readWriteOpts.IndexGroup := ADSIGRP_SYM_VALBYHND;
readWriteOpts.IndexOffset := _symbolHandle.Handle;
readWriteOpts.WriteParams := _symbolHandle.SymbolAddress.WriteRef;
readWriteOpts.ReadParams := _symbolHandle.SymbolAddress.ReadRef;
readWriteOpts.Timeout := adsTimeout;

TryMethodCall := readWrite.TryRequest(readWriteOpts, status => status);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="T_CallMethod">
      <LineId Id="467" Count="0" />
      <LineId Id="67" Count="0" />
    </LineIds>
    <LineIds Name="T_CallMethod.Busy.Get">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="T_CallMethod.Done.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_CallMethod.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_CallMethod.TryMethodCall">
      <LineId Id="177" Count="14" />
      <LineId Id="26" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>