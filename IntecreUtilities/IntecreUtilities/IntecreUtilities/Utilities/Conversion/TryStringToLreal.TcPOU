<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="TryStringToLreal" Id="{2ad12ec6-cb3e-4f28-85e9-3cc8749a0d37}" SpecialFunc="None">
    <Declaration><![CDATA[// Returns TRUE if possible. sVal will hold value if passes.
FUNCTION TryStringToLreal : BOOL
VAR_INPUT
   sStringToParse : STRING; // String to try
END_VAR
VAR_IN_OUT
   sVal : LREAL; // 0.0 (zero) if fails, parsed value if passes.
END_VAR
VAR
   i : INT;
   n : INT; // position of full stop (if at all).
   intPart : DINT; // integer part of the number.
   decPart : UDINT; // decimal part of the number.
   decPartAsLreal : LREAL;
   decimalPlaces : INT; // number of dps.
   isMinus : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF LEN(sStringToParse) > 0 THEN

   FOR i := 0 TO LEN(sStringToParse) - 1 DO

      IF i = 0 AND_THEN sStringToParse[i] = 45 THEN // accept "minus" sign for first digit
         isMinus := TRUE;
      ELSIF i = 1 AND isMinus THEN // if first char is "-", second must be digit.
         IF NOT CharIsNumberOrPeriod(sStringToParse[i]) THEN
            sVal := 0;
            RETURN;
         END_IF
      ELSIF NOT CharIsNumberOrPeriod(sStringToParse[i]) THEN
         sVal := 0;
         RETURN;
      END_IF
   END_FOR

   n := FIND(sStringToParse, '.');

   IF n > 0 THEN // full stop is in the string.
      // get integer part.
      intPart := STRING_TO_DINT(LEFT(sStringToParse, n - 1));
      decimalPlaces := LEN(sStringToParse) - n;
      // get decimal part as integer.
      decPart := STRING_TO_UDINT(RIGHT(sStringToParse, decimalPlaces));
      // convert to LREAL, includng rolling decimal places.
      decPartAsLreal := UDINT_TO_LREAL(decPart) / EXPT(10, decimalPlaces);

      // handle sign change.
      IF isMinus THEN
         decPartAsLreal := decPartAsLreal * -1;
      END_IF

      //combine them
      sVal := DINT_TO_LREAL(intPart);
      sVal := sVal + decPartAsLreal;
   ELSE
      sVal := STRING_TO_LREAL(sStringToParse);
   END_IF

   TryStringToLreal := TRUE;

END_IF]]></ST>
    </Implementation>
    <LineIds Name="TryStringToLreal">
      <LineId Id="282" Count="41" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>